#summary Building and running the JGIt front-end.

= Taking JGit for a Spin =

Although you are probably interested in JGit because you want to integrate it into an existing application or create a tool, JGit is more than simply a Java library for working with git repository. So before diving into the different aspects of the library let's take JGit for a spin.

You are probably familiar with the git command line interface (CLI) that can be used from the shell or in scripts. JGit comes with its own small CLI, which, although not as feature-full as the git CLI, is a good way to showcase what JGIt can do. Furthermore, the programs serve as an excellent source of inspiration for how to accomplish different tasks.

== Building the JGit CLI ==

Assuming that you have the EGit git repository cloned and ready, build the `jgit` binary by running the `make_jgit.sh` script:
{{{
prompt$ ./make_jgit.sh
Entering org.spearce.jgit ...
Entering org.spearce.jgit.pgm ...

Version v0.3.1.737.gf5bc
Created jgit.jar.
Created jgit_src.zip.
Created jgit.
}}}
Check your build by running the "version" command:
{{{
prompt$ ./jgit version
jgit version v0.3.1.737.gf5bc
}}}
It should print the version that was printing during the build.